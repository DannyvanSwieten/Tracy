#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

#include "ray_payload.glsl"

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(location = 0) rayPayloadEXT RayPayload ray;

void main()
{
    uint rayFlags = gl_RayFlagsOpaqueEXT;
    uint cullMask = 0xff;
    float tmin = 0.001;
    float tmax = 10000.0;

    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.x + .5, gl_LaunchIDEXT.y +.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec3 origin = vec3(0, 0, -5);
    vec3 target = vec3(d.x, d.y, 0);
    vec3 direction = normalize(target - origin);

    traceRayEXT(topLevelAS, 
            rayFlags, cullMask, 
            0 /*sbtRecordOffset*/, 0 /*sbtRecordStride*/,
            0 /*missIndex*/, 
            origin + direction, tmin, direction, tmax, 
            0 /*payload*/);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(ray.hit));
}